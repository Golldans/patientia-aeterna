scalar DateTime

type Order {
  id: Int!
  price: Float!
  address: String!
  phone: Int!
  clientName: String!
  observation: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input CreateOrderInput {
  price: Float!
  address: String!
  phone: Int!
  clientName: String!
  observation: String!
  createdAt: DateTime
  updatedAt: DateTime
}

input UpdateOrderInput {
  id: Int!
}

input OrderByParams {
  field: String
  direction: String
}

type Query {
  orders(orderBy: OrderByParams): [Order]!
  order(id: Int!): Order
  totalOrders: Float!
}

type Mutation {
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!): Order!
  removeOrder(id: Int!): Order
}
